// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Transaction {
  id              Int      @id @default(autoincrement())
  transaction_hash String   @unique
  user_wallet      String
  createdAt       DateTime @default(now())
}

model RegisteredUsers { 
  id              Int      @id @default(autoincrement())
  user_id         String?   @unique
}

model SpecialUserCodes {
  id              Int      @id @default(autoincrement())
  code            String 
  is_used         Boolean @default(false)
  used_by         String
}

model ArbitrumWallets {
  id              Int      @id @default(autoincrement())
  wallet_address  String   @unique
  private_key     String
  is_verified     Boolean @default(false)
  mnemonic        String?
  user_id         String
}

model BaseWallets {
  id              Int      @id @default(autoincrement())
  wallet_address  String   @unique
  private_key     String
  is_verified     Boolean @default(false)
  mnemonic        String?
}

model Admins {
  user_id         String   @id @default("")
}

model Interations {
  id              Int      @id @default(autoincrement())
  user            String 
  page            String
}

model WalletInteraction {
  id              Int      @id @default(autoincrement())
  user            String
  operation       String
  success         Boolean @default(false)
}

model Chains {
  id          String   @id
  name        String
  isEmbedded  Boolean  @default(false)
  disabled    Boolean  @default(false)
  icon        String
  Agents      Agents[]
}

model LlmProviders {
  id          String   @id
  name        String
  disabled    Boolean  @default(false)
  Agents      Agents[]
}

model KnowledgeBases {
  id          String   @id
  name        String
  disabled    Boolean  @default(false)
  Agents      Agents[]
}

model Agents {
  id              String           @id
  name            String
  chains          Chains[]
  llmProviders    LlmProviders[]
  knowledgeBases  KnowledgeBases[]
  isOnPointSystem Boolean          @default(false)
  points          AgentPoints[]
}

model AgentPoints {
  id        String  @id
  agentId   String
  points    Int
  agent     Agents  @relation(fields: [agentId], references: [id])
}